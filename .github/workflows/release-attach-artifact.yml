name: attach build artifact to release manually

on: workflow_dispatch

permissions: write-all

env:
  TEMP_ASSET_NAME: asset.zip

jobs:
  attach-build-artifact:
    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
      - uses: actions/checkout@v3

      - name: Get tag from ref
        env:
          REF: ${{ github.ref }}
        run: |
          [[ $REF =~ ^refs/tags/ ]] || (echo "This workflow must be run from tag."; exit 1)
          TAG_NAME=$(echo $REF | sed -E s#^refs/tags/##)
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Get upload url
        env:
          RELEASES_URL: ${{ github.event.repository.releases_url }}
        run: |
          URL=$(echo "$RELEASES_URL" | sed -e s:{/id}:/tags/$TAG_NAME:)
          JSON_TEXT=$(curl -sSL $URL)
          UPLOAD_URL=$(echo "$JSON_TEXT" | jq ".upload_url" | sed -e 's/\"//g')
          UPLOAD_URL_ZIP=$(echo "$UPLOAD_URL" | sed -e "s/{?name,label}/?name=net.ts7m.glitch-shader-${TAG_NAME}.zip/")
          UPLOAD_URL_PACKAGE_JSON=$(echo "$UPLOAD_URL" | sed -e "s/{?name,label}/?name=package.json/")
          echo "UPLOAD_URL_ZIP=$UPLOAD_URL_ZIP" >> $GITHUB_ENV
          echo "UPLOAD_URL_PACKAGE_JSON=$UPLOAD_URL_PACKAGE_JSON" >> $GITHUB_ENV

      - name: Create zip
        run: cd ./Assets/GlitchShader; zip $TEMP_ASSET_NAME -r .

      - name: Upload release zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            $UPLOAD_URL_ZIP \
            --data-binary "@Assets/GlitchShade/$TEMP_ASSET_NAME"

      - name: Upload package json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            $UPLOAD_URL_ZIP \
            --data-binary "@Assets/GlitchShade/package.json"
